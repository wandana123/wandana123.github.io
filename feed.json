{
    "version": "https://jsonfeed.org/version/1",
    "title": "全栈技术",
    "description": "",
    "home_page_url": "https://wandana123.github.io",
    "items": [
        {
            "id": "https://wandana123.github.io/2024/07/24/sql%E3%81%AEoracle%E8%A1%A8%E7%A9%BA%E9%97%B4%E6%89%A9%E5%AE%B9/",
            "url": "https://wandana123.github.io/2024/07/24/sql%E3%81%AEoracle%E8%A1%A8%E7%A9%BA%E9%97%B4%E6%89%A9%E5%AE%B9/",
            "title": "sqlのoracle表空间扩容",
            "date_published": "2024-07-24T07:37:37.000Z",
            "content_html": "<p>业务场景：</p>\n<p>记录一下，2024 年 7 月 24，发生了一场不大不小的生产事故，导致一个地级市整个城市的某个业务系统停服一上午。也吸取一下深刻的教训。简单来讲，导致该事故最直接的原因就是这个业务系统现场人员为按时巡检导致，该系统数据库表空间满了没人知道，直到客户反馈业务传输有问题了，才开始排查，排查发现录入的信息数据库内无法查找，抽取日志查看发现表空间无法自动扩容。<br>\n所以运维工作中，日常巡检的必要性还是毋庸置疑的。</p>\n<p>扩容用有 dba 权限的账号，通过 plsql 客户端直接操作的。是使用增加数据文件的方式进行扩容。<strong>建议表空间超过 90% 就直接扩容</strong>。</p>\n<p>–查询表空间使用情况<br>\n <code>SELECT a.tablespace_name &quot;表空间名&quot;,        round(total / (1024 * 1024 * 1024), 2) &quot;表空间大小(G)&quot;,        round(free / (1024 * 1024 * 1024), 2) &quot;表空间剩余大小(G)&quot;,        round((total - free) / (1024 * 1024 * 1024), 2) &quot;表空间使用大小(G)&quot;,        round((total - free) / total, 4) * 100 &quot;使用率 %&quot;   FROM (SELECT tablespace_name, SUM(bytes) free           FROM dba_free_space          GROUP BY tablespace_name) a,        (SELECT tablespace_name, SUM(bytes) total           FROM dba_data_files          GROUP BY tablespace_name) b  WHERE a.tablespace_name = b.tablespace_name</code></p>\n<p>–临时表空间使用率<br>\n <code>select c.tablespace_name &quot;临时表空间名&quot;,        round(c.bytes / 1024 / 1024 / 1024, 2) &quot;临时表空间大小(G)&quot;,        round((c.bytes - d.bytes_used) / 1024 / 1024 / 1024, 2) &quot;临时表空间剩余大小(G)&quot;,        round(d.bytes_used / 1024 / 1024 / 1024, 2) &quot;临时表空间使用大小(G)&quot;,        round(d.bytes_used * 100 / c.bytes, 4) || '%' &quot;使用率 %&quot;   from (select tablespace_name, sum(bytes) bytes           from dba_temp_files          GROUP by tablespace_name) c,        (select tablespace_name, sum(bytes_cached) bytes_used           from v$temp_extent_pool          GROUP by tablespace_name) d  where c.tablespace_name = d.tablespace_name;</code></p>\n<p>–查询表空间位置<br>\n <code>SELECT TABLESPACE_NAME &quot;表空间名&quot;, BYTES/1024/1024 &quot;表空间大小(M)&quot;, FILE_NAME &quot;文件路径&quot;,FILE_ID &quot;文件ID&quot; FROM DBA_DATA_FILES order by TABLESPACE_NAME,FILE_NAME; </code></p>\n<p>扩容：<br>\n–一个表空间最大为 32g，超过 32g 需要增加，例如：</p>\n<pre><code>alter tablespace DAS ADD  datafile '/mc_data/oradata/zsk/das01.dbf' SIZE 30G;\n</code></pre>\n<p>扩展阅读：</p>\n<p>删除表空间扩容文件:</p>\n<pre><code>#alter tablespace 表空间名称 drop datafile 文件id;\nalter tablespace UNDOTBS1 drop datafile 6;\n</code></pre>\n<p>删除临时表空间扩容文件:</p>\n<pre><code>#alter tablespace 临时表空间名称 drop tempfile 文件id;\nalter tablespace UNDOTBS2 drop tempfile 7;\n</code></pre>\n<p>清理表空间：</p>\n<pre><code>alter  tablespace  IRFS_TEMP shrink space;\n</code></pre>\n<p>创建各种类型表空间：</p>\n<pre><code>-- 创建大小为50mb的永久表空间TEST01，禁止自动扩展数据文件\ncreate tablespace TEST01\nlogging\ndatafile'F:\\app\\oraclezq\\oradata\\orcl\\TEST01.dbf' size 50m\nreuse autoextend off;\n\n-- 创建永久表空间TEST02，允许自动扩展数据文件，本地管理方式\ncreate tablespace TEST02\nlogging\ndatafile'F:\\app\\oraclezq\\oradata\\orcl\\TEST02.dbf' size 50m\nreuse autoextend on next 10m maxsize 200m\nextent management local;\n\n-- 创建永久表空间TEST03，允许自动扩展数据文件，本地管理方式，区分配方式为自动分配\ncreate tablespace TEST03\nlogging\ndatafile'F:\\app\\oraclezq\\oradata\\orcl\\TEST03.dbf' size 50m\nreuse autoextend on next 10m maxsize 200m\nextent management local autoallocate;\n\n-- 创建永久表空间TEST04，允许自动扩展数据文件，本地管理方式，区分配方式为定制分配\ncreate tablespace TEST04\nlogging\ndatafile'F:\\app\\oraclezq\\oradata\\orcl\\TEST04.dbf' size 50m\nreuse autoextend on next 10m maxsize 200m\nextent management local uniform size 10m;\n\n-- 创建永久表空间TEST05，允许自动扩展数据文件，本地管理方式，区分配方式为自动分配，段管理方式为自动管理\ncreate tablespace test05\nlogging\ndatafile'F:\\app\\oraclezq\\oradata\\orcl\\TEST05.dbf' size 50m\nreuse autoextend on next 10m maxsize 200M\nextent management local autoallocate\nsegment space management auto;\n\n-- 创建永久表空间TEST06，允许自动扩展数据文件，本地管理方式，区分配方式为定制分配，段管理方式为手动管理\ncreate tablespace test06\nlogging\ndatafile'F:\\app\\oraclezq\\oradata\\orcl\\TEST06.dbf' size 50m\nreuse autoextend on next 10m maxsize 200M\nextent management local uniform size 10m\nsegment space management manual;\n</code></pre>\n<p>扩容 oracle 表空间的四种方法</p>\n<p>示例 1：新增数据文件<br>\n ALTER TABLESPACE DSA ADD DATAFILE ‘E:\\ORACLE\\PRODUCT\\10.2.0\\ORADATA\\DAS01.DBF’ SIZE 102400M;</p>\n<p>示例 2：新增数据文件，允许数据文件自动增长<br>\n ALTER TABLESPACE DSA ADD DATAFILE ‘E:\\ORACLE\\PRODUCT\\10.2.0\\ORADATA\\DSA01.DBF’ SIZE 50M AUTOEXTEND ON NEXT 5M MAXSIZE 100M;</p>\n<p>示例 3：允许已存在的数据文件自动增长<br>\n ALTER DATABASE DATAFILE ‘E:\\ORACLE\\PRODUCT\\10.2.0\\ORADATA\\DSA01.DBF’ AUTOEXTEND ON NEXT 5M MAXSIZE 100M;</p>\n<p>示例 4：手工改变已存在数据文件的大小<br>\n ALTER DATABASE DATAFILE ‘D:\\ORACLE\\PRODUCT\\10.2.0\\ORADATA\\DSA01.DBF’ RESIZE 100M;</p>\n",
            "tags": [
                "数据库"
            ]
        },
        {
            "id": "https://wandana123.github.io/2024/07/24/sql%E3%81%AEupdate-case-when-%E7%9A%84%E7%8E%A9%E6%B3%95/",
            "url": "https://wandana123.github.io/2024/07/24/sql%E3%81%AEupdate-case-when-%E7%9A%84%E7%8E%A9%E6%B3%95/",
            "title": "sqlのupdate case when 的玩法",
            "date_published": "2024-07-24T01:23:36.000Z",
            "content_html": "<p>业务场景：</p>\n<pre><code>有部分数据需要按条件做判断来update某个表的字段值。这个我是怎么实现的呢？\n</code></pre>\n<p>sql：</p>\n<pre><code>UPDATE user \nSET order = CASE\nWHEN id = '1' THEN '1' \nWHEN id = '2' THEN '2' \nEND;\n</code></pre>\n<p>当然，这个语句还可以扩展一下，例如如下用法：</p>\n<pre><code>示例1：\nUPDATE graduates \nSET income = CASE\nWHEN income = 20000 THEN income * 0.5 \nWHEN income = 15000 THEN income + 500 \nELSE income \nEND;\n\n示例2：\nUPDATE customers\nSET age = CASE \nWHEN age &lt; 30 THEN age + 1\nELSE age\nEND;\n\n示例3：\nUPDATE customers\nSET \nage = CASE \n    WHEN city = 'New York' THEN age + 1\n    ELSE age\nEND,\ncountry = CASE \n    WHEN city = 'New York' THEN 'USA'\n    ELSE country\nEND;</code></pre>\n",
            "tags": [
                "数据库"
            ]
        },
        {
            "id": "https://wandana123.github.io/2024/06/26/%E7%A5%9E%E9%80%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E6%9F%90%E4%B8%AA%E6%A8%A1%E5%BC%8F%E4%B8%8B%E6%89%80%E6%9C%89%E8%A1%A8%E7%9A%84%E5%A4%A7%E5%B0%8F/",
            "url": "https://wandana123.github.io/2024/06/26/%E7%A5%9E%E9%80%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E6%9F%90%E4%B8%AA%E6%A8%A1%E5%BC%8F%E4%B8%8B%E6%89%80%E6%9C%89%E8%A1%A8%E7%9A%84%E5%A4%A7%E5%B0%8F/",
            "title": "神通数据库查询某个模式下所有表的大小",
            "date_published": "2024-06-26T02:53:38.000Z",
            "content_html": "<p>业务场景：<br>\n有一天正常巡检发现数据库数据量在成倍增长。按道理，我的业务量，数据不可能会这么疯狂的增量。所以想看看到底是啥数据占用了这么多空间。检查发现有张表里写了文件导致的。</p>\n<pre><code>下面是具体sql。\n</code></pre>\n<p><code>SELECT TMP.NSPNAME AS &quot;Sechma&quot;,        TMP.RELNAME,        SUM(TMP.SIZE) / 1024 /1024 AS &quot;Size(M)&quot;   FROM (SELECT N.NSPNAME, C.RELNAME,c.RELKIND, S.SIZE           FROM V_SEGMENT_INFO S, SYS_CLASS C, SYS_NAMESPACE N          WHERE S.RELID = C.OID            AND C.RELNAMESPACE = N.OID) TMP  WHERE  (TMP.NSPNAME='SYSDBA') and TMP.RELKIND ='r'  GROUP BY TMP.NSPNAME, TMP.RELNAME;</code></p>\n<h1 id=\"搞定收工\"><a class=\"markdownIt-Anchor\" href=\"#搞定收工\">#</a> 搞定，收工！！！</h1>\n<h1 id=\"打卡下班\"><a class=\"markdownIt-Anchor\" href=\"#打卡下班\">#</a> 打卡，下班！！！</h1>\n",
            "tags": [
                "数据库"
            ]
        },
        {
            "id": "https://wandana123.github.io/2024/06/13/WIN10-WIN11%E7%BB%84%E7%AD%96%E7%95%A5%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E7%9A%84%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/",
            "url": "https://wandana123.github.io/2024/06/13/WIN10-WIN11%E7%BB%84%E7%AD%96%E7%95%A5%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E7%9A%84%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/",
            "title": "WIN10&&WIN11组策略无法打开的问题处理",
            "date_published": "2024-06-13T06:52:31.000Z",
            "content_html": "<p>问题描述：<br>\nwin + R 运行框内 gpedit.msc 调不起来组策略。</p>\n<p>解决方案：<br>\n1. 随便哪个位置，新建一个 txt 文档，粘贴如下内容。</p>\n<p>@echo off</p>\n<p>pushd “%~dp0”</p>\n<p>dir /b C:\\Windows\\servicing\\Packages\\Microsoft-Windows-GroupPolicy-ClientExtensions-Package~3*.mum &gt;List.txt</p>\n<p>dir /b C:\\Windows\\servicing\\Packages\\Microsoft-Windows-GroupPolicy-ClientTools-Package~3*.mum &gt;&gt;List.txt</p>\n<p>for /f %%i in (‘findstr /i . List.txt 2^&gt;nul’) do dism /online /norestart /add-package:“C:\\Windows\\servicing\\Packages%%i”</p>\n<p>pause</p>\n<p>2. 另存为 XXX.cmd</p>\n<p>3. 文件名随便就行。然后以管理员权限运行。</p>\n<p>最后跑完内容后，再 win + R 运行框内 gpedit.msc 就可以了。</p>\n",
            "tags": [
                "WINDOWS"
            ]
        },
        {
            "id": "https://wandana123.github.io/2024/06/05/NGINX%E6%90%AD%E5%BB%BA%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/",
            "url": "https://wandana123.github.io/2024/06/05/NGINX%E6%90%AD%E5%BB%BA%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/",
            "title": "NGINX搭建负载均衡",
            "date_published": "2024-06-05T03:05:00.000Z",
            "content_html": "<p>#user  nobody;<br>\nworker_processes  1;</p>\n<p>#error_log  logs/error.log;<br>\n#error_log  logs/error.log  notice;<br>\n#error_log  logs/error.log  info;</p>\n<p>#pid        logs/nginx.pid;</p>\n<p>events {<br>\nworker_connections  1024;<br>\n}</p>\n<p>http {<br>\ninclude       mime.types;<br>\ndefault_type  application/octet-stream;</p>\n<pre><code>map $http_upgrade $connection_upgrade &#123;\n\tdefault upgrade;\n\t'' close;\n   &#125;\n   \n#log_format  main  '$remote_addr - $remote_user [$time_local] &quot;$request&quot; '\n#                  '$status $body_bytes_sent &quot;$http_referer&quot; '\n#                  '&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;';\n\n#access_log  logs/access.log  main;\n\n#上传文件最大限制\nclient_max_body_size 500M;\n\nsendfile        on;\n#tcp_nopush     on;\n\n#keepalive_timeout  0;\nkeepalive_timeout  65;\n\ntypes_hash_max_size 2048;\nserver_names_hash_max_size 2048;\ntypes_hash_bucket_size 1024;\n\n#gzip  on;\n\n\nupstream websocket &#123;\n\t\tip_hash;\n\t\tserver ip:port;\n\t\tserver ip:port;\n\t\t\n    &#125;\n\t\n    server &#123;\n\t\tlisten     80;\n\t\tserver_name www.baidu.com;\n\t\t\n\t\t\n\t\tlocation / &#123;\n\t\t\t\n\t\t\t#此处是nignx负载路径重写，重定向\n\t\t\trewrite ^/$ http://$server_name/DW permanent;\n\t\t\t\n\t\t\tadd_header X-Content-Type-Options nosniff;\n\t\t\tproxy_set_header X-scheme $scheme;\n\t\t\t\n\t\t\tproxy_set_header X-Real-IP $remote_addr;\n\t\t\tproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header Host $http_host;\n\t\t\tproxy_set_header X-Nginx-Proxy true;\n\t\t\tproxy_hide_header X-Powered-By;\n\t\t\tproxy_hide_header Vary;\n\t\t\tproxy_pass http://websocket;\n\t\t\tproxy_http_version 1.1;\n\t\t\tproxy_set_header Origin '';\n\t\t\tproxy_set_header Upgrade $http_upgrade;\n\t\t\tproxy_set_header Connection $connection_upgrade;\n\t\t\tproxy_connect_timeout 1800; \n\t\t\tproxy_read_timeout 900; \n\t\t\tproxy_send_timeout 900; \n\t\t\n\n\n\t\t\t#proxy_set_header   Host             $host; \n\t\t\t#proxy_set_header   X-Real-IP        $remote_addr; \n\t\t\t#proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for; \n\n\t\t&#125;\n\n\t&#125;\n\t\n\tserver &#123;\n\t\tlisten     80;\n\t\tserver_name www.qq.com;\n\t\t\n\t\t\n\t\tlocation / &#123;\n\t\t\t\n\t\t\t#此处是nignx负载路径重写，重定向\n\t\t\trewrite ^/$ http://$server_name/DWeb/dw/index.html permanent;\n\t\t\t\n\t\t\tadd_header X-Content-Type-Options nosniff;\n\t\t\tproxy_set_header X-scheme $scheme;\n\t\t\t\n\t\t\tproxy_set_header X-Real-IP $remote_addr;\n\t\t\tproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header Host $http_host;\n\t\t\tproxy_set_header X-Nginx-Proxy true;\n\t\t\tproxy_hide_header X-Powered-By;\n\t\t\tproxy_hide_header Vary;\n\t\t\tproxy_pass http://websocket;\n\t\t\tproxy_http_version 1.1;\n\t\t\tproxy_set_header Origin '';\n\t\t\tproxy_set_header Upgrade $http_upgrade;\n\t\t\tproxy_set_header Connection $connection_upgrade;\n\t\t\tproxy_connect_timeout 1800; \n\t\t\tproxy_read_timeout 900; \n\t\t\tproxy_send_timeout 900; \n\t\t\n\n\n\t\t\t#proxy_set_header   Host             $host; \n\t\t\t#proxy_set_header   X-Real-IP        $remote_addr; \n\t\t\t#proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for; \n\n\t\t&#125;\n\t&#125;\t\n&#125;\n\n\n#server &#123;\n    #listen       80;\n    #server_name  localhost;\n\n    #charset koi8-r;\n\n    #access_log  logs/host.access.log  main;\n\n    #location / &#123;\n    #    root   html;\n    #    index  index.html index.htm;\n    #&#125;\n\n    #error_page  404              /404.html;\n\n    # redirect server error pages to the static page /50x.html\n    #\n    #error_page   500 502 503 504  /50x.html;\n    #location = /50x.html &#123;\n    #  root   html;\n    #&#125;\n\n    # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n    #\n    #location ~ \\.php$ &#123;\n    #    proxy_pass   http://127.0.0.1;\n    #&#125;\n\n    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n    #\n    #location ~ \\.php$ &#123;\n    #    root           html;\n    #    fastcgi_pass   127.0.0.1:9000;\n    #    fastcgi_index  index.php;\n    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n    #    include        fastcgi_params;\n    #&#125;\n\n    # deny access to .htaccess files, if Apache's document root\n    # concurs with nginx's one\n    #\n    #location ~ /\\.ht &#123;\n    #    deny  all;\n    #&#125;\n#&#125;\n\n\n# another virtual host using mix of IP-, name-, and port-based configuration\n#\n#server &#123;\n#    listen       8000;\n#    listen       somename:8080;\n#    server_name  somename  alias  another.alias;\n\n#    location / &#123;\n#        root   html;\n#        index  index.html index.htm;\n#    &#125;\n#&#125;\n\n\n# HTTPS server\n#\n#server &#123;\n#    listen       443 ssl;\n#    server_name  localhost;\n\n#    ssl_certificate      cert.pem;\n#    ssl_certificate_key  cert.key;\n\n#    ssl_session_cache    shared:SSL:1m;\n#    ssl_session_timeout  5m;\n\n#    ssl_ciphers  HIGH:!aNULL:!MD5;\n#    ssl_prefer_server_ciphers  on;\n\n#    location / &#123;\n#        root   html;\n#        index  index.html index.htm;\n#    &#125;\n#&#125;</code></pre>\n",
            "tags": []
        },
        {
            "id": "https://wandana123.github.io/2024/05/08/%E4%B8%9C%E6%96%B9%E9%80%9A%EF%BC%88TongWeb%EF%BC%89%E5%AE%9A%E6%97%B6%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF%E4%BB%BB%E5%8A%A1/",
            "url": "https://wandana123.github.io/2024/05/08/%E4%B8%9C%E6%96%B9%E9%80%9A%EF%BC%88TongWeb%EF%BC%89%E5%AE%9A%E6%97%B6%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF%E4%BB%BB%E5%8A%A1/",
            "title": "东方通（TongWeb）定时自动重启任务",
            "date_published": "2024-05-08T09:34:56.000Z",
            "content_html": "<p>#首先执行 <code>crontab -e</code>  进入定时任务内<br>\n #然后将下面的任务复制粘贴进去，wq! 保存退出<br>\n #重启 crontab 任务即可</p>\n<p>#每天早晨 5:00 停机</p>\n<pre><code>00 05 * * * cd /opt/TongWeb7.0/bin;./stopserver.sh\n</code></pre>\n<p>#每天早晨 5:04 启动</p>\n<pre><code>04 05 * * * cd /opt/TongWeb7.0/bin;./startservernohup.sh\n</code></pre>\n<p>#每天中午 13:00 停机</p>\n<pre><code>00 13 * * * cd /opt/TongWeb7.0/bin;./stopserver.sh\n</code></pre>\n<p>#每天中午 13:04 重启<br>\n 04 13 * * * cd /opt/TongWeb7.0/bin;./startservernohup.sh</p>\n<p><img src=\"/2024/05/08/%E4%B8%9C%E6%96%B9%E9%80%9A%EF%BC%88TongWeb%EF%BC%89%E5%AE%9A%E6%97%B6%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF%E4%BB%BB%E5%8A%A1/dingshirenwu.png\" alt=\"crontab格式说明\"></p>\n<p>太高级了，简直简单的不要不要的！！！！！！！</p>\n<p>又搞定了一个大事儿。</p>\n",
            "tags": [
                "中间件"
            ]
        }
    ]
}